services:
  redis:
    image: redis:7
    container_name: activepieces-redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

  db:
    image: postgres:16
    container_name: activepieces-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: activepieces
      POSTGRES_PASSWORD: activepieces
      POSTGRES_DB: activepieces
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U activepieces"]
      interval: 5s
      timeout: 5s
      retries: 5
    # âœ… Use named volume instead of NTFS bind mount (prevents permission errors)
    volumes:
      - postgres_data:/var/lib/postgresql/data

  activepieces:
    image: activepieces/activepieces:latest
    container_name: activepieces
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    ports:
      - "8080:80"
    environment:
      # Redis config
      AP_REDIS_HOST: redis
      AP_REDIS_PORT: 6379

      # PostgreSQL config
      AP_DATABASE_TYPE: postgres
      AP_POSTGRES_HOST: db
      AP_POSTGRES_PORT: 5432
      AP_POSTGRES_USERNAME: activepieces
      AP_POSTGRES_PASSWORD: activepieces
      AP_POSTGRES_DATABASE: activepieces

      # General app config
      AP_FRONTEND_URL: http://localhost:8080
      AP_ENCRYPTION_KEY: 703ee45e7a485db357aa8517a2793ddf
      AP_JWT_SECRET: supersecretjwtkey
      AP_TELEMETRY_ENABLED: false
      AP_SYNC_PIECES_ON_STARTUP: false
    volumes:
      - activepieces_data:/root/.activepieces
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  activepieces_data:
